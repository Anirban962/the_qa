{"version":3,"file":"index.js","mappings":"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","sources":["webpack://the_qa_gutenbarg_task/./src/edit.js","webpack://the_qa_gutenbarg_task/./src/save.js","webpack://the_qa_gutenbarg_task/external window [\"wp\",\"blockEditor\"]","webpack://the_qa_gutenbarg_task/external window [\"wp\",\"blocks\"]","webpack://the_qa_gutenbarg_task/external window [\"wp\",\"components\"]","webpack://the_qa_gutenbarg_task/external window [\"wp\",\"i18n\"]","webpack://the_qa_gutenbarg_task/external window \"ReactJSXRuntime\"","webpack://the_qa_gutenbarg_task/webpack/bootstrap","webpack://the_qa_gutenbarg_task/webpack/runtime/compat get default export","webpack://the_qa_gutenbarg_task/webpack/runtime/define property getters","webpack://the_qa_gutenbarg_task/webpack/runtime/hasOwnProperty shorthand","webpack://the_qa_gutenbarg_task/webpack/runtime/make namespace object","webpack://the_qa_gutenbarg_task/./src/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useBlockProps, RichText, InspectorControls, PanelColorSettings } from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\n\nexport default function Edit({ attributes, setAttributes }) {\n    const { heading, content, backgroundColor, hasBorder } = attributes;\n    \n    return (\n        <>\n            <InspectorControls>\n                <PanelBody title={ __('Settings', 'custom-highlight-box') }>\n                    <PanelColorSettings\n                        title={ __('Background Color', 'custom-highlight-box') }\n                        colorSettings={[{\n                            value: backgroundColor,\n                            onChange: (color) => setAttributes({ backgroundColor: color }),\n                            label: __('Background Color', 'custom-highlight-box'),\n                        }]}\n                    />\n                    <ToggleControl\n                        label={ __('Enable Border', 'custom-highlight-box') }\n                        checked={ hasBorder }\n                        onChange={(value) => setAttributes({ hasBorder: value })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n            <div { ...useBlockProps({\n                style: {\n                    backgroundColor,\n                    border: hasBorder ? '2px solid black' : 'none',\n                    padding: '10px',\n                },\n            })}>\n                <RichText\n                    tagName=\"h2\"\n                    value={ heading }\n                    onChange={(value) => setAttributes({ heading: value })}\n                    placeholder={ __('Add Heading...', 'custom-highlight-box') }\n                />\n                <RichText\n                    tagName=\"p\"\n                    value={ content }\n                    onChange={(value) => setAttributes({ content: value })}\n                    placeholder={ __('Add content...', 'custom-highlight-box') }\n                />\n            </div>\n        </>\n    );\n}","import { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n    const { heading, content, backgroundColor, hasBorder } = attributes;\n    \n    return (\n        <div { ...useBlockProps.save({\n            style: {\n                backgroundColor,\n                border: hasBorder ? '2px solid black' : 'none',\n                padding: '10px',\n            },\n        })}>\n            <RichText.Content tagName=\"h2\" value={ heading } />\n            <RichText.Content tagName=\"p\" value={ content } />\n        </div>\n    );\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n    edit: Edit,\n    save: Save,\n});"],"names":["__","useBlockProps","RichText","InspectorControls","PanelColorSettings","PanelBody","ToggleControl","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Edit","attributes","setAttributes","heading","content","backgroundColor","hasBorder","children","title","colorSettings","value","onChange","color","label","checked","style","border","padding","tagName","placeholder","Save","save","Content","registerBlockType","metadata","name","edit"],"sourceRoot":""}